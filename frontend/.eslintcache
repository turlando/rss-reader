[{"/home/tancredi/Projects/rss-reader/frontend/src/index.tsx":"1","/home/tancredi/Projects/rss-reader/frontend/src/App.tsx":"2","/home/tancredi/Projects/rss-reader/frontend/src/store/store.ts":"3","/home/tancredi/Projects/rss-reader/frontend/src/store/session-slice.ts":"4","/home/tancredi/Projects/rss-reader/frontend/src/store/subscriptions-slice.ts":"5","/home/tancredi/Projects/rss-reader/frontend/src/store/feed-slice.ts":"6","/home/tancredi/Projects/rss-reader/frontend/src/store/reader-slice.ts":"7","/home/tancredi/Projects/rss-reader/frontend/src/api.ts":"8","/home/tancredi/Projects/rss-reader/frontend/src/components/reader/index.ts":"9","/home/tancredi/Projects/rss-reader/frontend/src/components/login/index.tsx":"10","/home/tancredi/Projects/rss-reader/frontend/src/components/reader/Reader.tsx":"11","/home/tancredi/Projects/rss-reader/frontend/src/components/login/Login.tsx":"12","/home/tancredi/Projects/rss-reader/frontend/src/components/login/LoginForm.tsx":"13","/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/index.ts":"14","/home/tancredi/Projects/rss-reader/frontend/src/components/feed-browser/index.ts":"15","/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-browser/index.ts":"16","/home/tancredi/Projects/rss-reader/frontend/src/components/feed-item-viewer/index.ts":"17","/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/index.ts":"18","/home/tancredi/Projects/rss-reader/frontend/src/components/modal/index.tsx":"19","/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/DialogText.tsx":"20","/home/tancredi/Projects/rss-reader/frontend/src/components/feed-browser/FeedBrowser.tsx":"21","/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/DialogButton.tsx":"22","/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/DialogButtons.tsx":"23","/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/Dialog.tsx":"24","/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-browser/SubscriptionsBrowser.tsx":"25","/home/tancredi/Projects/rss-reader/frontend/src/components/feed-item-viewer/FeedItemViewer.tsx":"26","/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/FolderForm.tsx":"27","/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/SubscriptionsEditor.tsx":"28","/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/FeedForm.tsx":"29","/home/tancredi/Projects/rss-reader/frontend/src/components/form/index.ts":"30","/home/tancredi/Projects/rss-reader/frontend/src/components/modal/Modal.tsx":"31","/home/tancredi/Projects/rss-reader/frontend/src/components/feed-browser/FeedItem.tsx":"32","/home/tancredi/Projects/rss-reader/frontend/src/components/form/Form.tsx":"33","/home/tancredi/Projects/rss-reader/frontend/src/components/form/FormInput.tsx":"34","/home/tancredi/Projects/rss-reader/frontend/src/components/form/FormSubmit.tsx":"35","/home/tancredi/Projects/rss-reader/frontend/src/components/toolbar/index.ts":"36","/home/tancredi/Projects/rss-reader/frontend/src/components/tree/index.ts":"37","/home/tancredi/Projects/rss-reader/frontend/src/components/toolbar/Toolbar.tsx":"38","/home/tancredi/Projects/rss-reader/frontend/src/components/tree/Tree.tsx":"39","/home/tancredi/Projects/rss-reader/frontend/src/components/toolbar/Item.tsx":"40","/home/tancredi/Projects/rss-reader/frontend/src/components/tree/FolderNode.tsx":"41","/home/tancredi/Projects/rss-reader/frontend/src/components/tree/FeedNode.tsx":"42","/home/tancredi/Projects/rss-reader/frontend/src/components/icon/index.ts":"43","/home/tancredi/Projects/rss-reader/frontend/src/components/icon/Icon.tsx":"44"},{"size":391,"mtime":1612375533902,"results":"45","hashOfConfig":"46"},{"size":685,"mtime":1612375533898,"results":"47","hashOfConfig":"46"},{"size":800,"mtime":1612375533972,"results":"48","hashOfConfig":"46"},{"size":1039,"mtime":1612375533922,"results":"49","hashOfConfig":"46"},{"size":1839,"mtime":1612375534048,"results":"50","hashOfConfig":"46"},{"size":2202,"mtime":1612375534135,"results":"51","hashOfConfig":"46"},{"size":695,"mtime":1612375533925,"results":"52","hashOfConfig":"46"},{"size":5030,"mtime":1612375534132,"results":"53","hashOfConfig":"46"},{"size":54,"mtime":1612375533898,"results":"54","hashOfConfig":"46"},{"size":51,"mtime":1612375533872,"results":"55","hashOfConfig":"46"},{"size":5990,"mtime":1612375534135,"results":"56","hashOfConfig":"46"},{"size":1081,"mtime":1612375534088,"results":"57","hashOfConfig":"46"},{"size":995,"mtime":1612375534105,"results":"58","hashOfConfig":"46"},{"size":217,"mtime":1612375533992,"results":"59","hashOfConfig":"46"},{"size":69,"mtime":1612375533972,"results":"60","hashOfConfig":"46"},{"size":96,"mtime":1612375533898,"results":"61","hashOfConfig":"46"},{"size":78,"mtime":1612375533978,"results":"62","hashOfConfig":"46"},{"size":199,"mtime":1612375534105,"results":"63","hashOfConfig":"46"},{"size":50,"mtime":1612375533872,"results":"64","hashOfConfig":"46"},{"size":208,"mtime":1612375534068,"results":"65","hashOfConfig":"46"},{"size":877,"mtime":1612375534105,"results":"66","hashOfConfig":"46"},{"size":636,"mtime":1612375534068,"results":"67","hashOfConfig":"46"},{"size":217,"mtime":1612375534068,"results":"68","hashOfConfig":"46"},{"size":217,"mtime":1612375534068,"results":"69","hashOfConfig":"46"},{"size":1364,"mtime":1612375534072,"results":"70","hashOfConfig":"46"},{"size":411,"mtime":1612375534125,"results":"71","hashOfConfig":"46"},{"size":2137,"mtime":1612375534125,"results":"72","hashOfConfig":"46"},{"size":270,"mtime":1612375534105,"results":"73","hashOfConfig":"46"},{"size":2349,"mtime":1612375534125,"results":"74","hashOfConfig":"46"},{"size":142,"mtime":1612375534002,"results":"75","hashOfConfig":"46"},{"size":769,"mtime":1612375534072,"results":"76","hashOfConfig":"46"},{"size":974,"mtime":1612375534105,"results":"77","hashOfConfig":"46"},{"size":419,"mtime":1612375534105,"results":"78","hashOfConfig":"46"},{"size":783,"mtime":1612375534072,"results":"79","hashOfConfig":"46"},{"size":462,"mtime":1612375534072,"results":"80","hashOfConfig":"46"},{"size":57,"mtime":1612375533898,"results":"81","hashOfConfig":"46"},{"size":73,"mtime":1612375534038,"results":"82","hashOfConfig":"46"},{"size":1796,"mtime":1612375830543,"results":"83","hashOfConfig":"46"},{"size":2651,"mtime":1612375534128,"results":"84","hashOfConfig":"46"},{"size":521,"mtime":1612375534135,"results":"85","hashOfConfig":"46"},{"size":1638,"mtime":1612375534128,"results":"86","hashOfConfig":"46"},{"size":890,"mtime":1612375534128,"results":"87","hashOfConfig":"46"},{"size":98,"mtime":1612375534125,"results":"88","hashOfConfig":"46"},{"size":1468,"mtime":1612375534132,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"xd9pf7",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"/home/tancredi/Projects/rss-reader/frontend/src/index.tsx",[],["184","185"],"/home/tancredi/Projects/rss-reader/frontend/src/App.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/store/store.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/store/session-slice.ts",["186"],"import { DeepPartial, PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\n\ninterface Session {\n    token?: string;\n}\n\n\nconst storeToken = (token: string) => {\n    localStorage.setItem('token', token)\n}\n\nconst removeToken = () => {\n    localStorage.removeItem('token')\n}\n\nconst getToken = () => {\n    return localStorage.getItem('token') || undefined;\n}\n\n\nconst initialState: Session = {\n    token: undefined,\n};\n\nconst preloadedState: DeepPartial<Session> = {\n    token: getToken(),\n};\n\n\nconst slice = createSlice({\n    name: 'session',\n    initialState,\n    reducers: {\n        setToken: (state, {payload}: PayloadAction<string>) => {\n            state.token = payload;\n\n            // FIXME: side effects should be in a middleware\n            storeToken(payload);\n        }\n    }\n});\n\n\nexport const sessionReducer = slice.reducer;\nexport const sessionPreloadedState = preloadedState;\n\nexport const selectToken = (state: RootState) => state.session.token;\n\nexport const {setToken} = slice.actions;\n","/home/tancredi/Projects/rss-reader/frontend/src/store/subscriptions-slice.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/store/feed-slice.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/store/reader-slice.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/api.ts",["187","188"],"import Axios, { AxiosResponse } from 'axios';\nimport { store } from './store/store';\n\n\n/* Constants ******************************************************************/\n\nconst BACKEND_URL = 'http://localhost:8000';\nconst SESSION_PATH = \"session\";\nconst SUBSCRIPTIONS_PATH = \"subscriptions\";\nconst FOLDER_PATH = \"folder\";\nconst FEED_PATH = \"feed\";\n\n\n/* Result types ***************************************************************/\n\nexport enum ResultType {\n    Success = \"success\",\n    Failure = \"failure\"\n}\n\n\nexport interface Success<T> {\n    result: ResultType.Success;\n    data: T\n}\n\n\nexport function Success<T>(data: T): Success<T> {\n    return {\n        result: ResultType.Success,\n        data: data\n    }\n}\n\n\nexport enum ErrorType {\n    DatabaseError = \"database_error\",\n    AuthenticationError = \"authentication_error\",\n    NotFound = \"not_found\",\n    Duplicate = \"duplicate\",\n    ClientError = \"client_error\",\n}\n\n\nexport interface Failure {\n    result: ResultType.Failure;\n    error: ErrorType;\n}\n\n\nexport function Failure(error: ErrorType): Failure {\n    return {\n        result: ResultType.Failure,\n        error: error\n    }\n}\n\n\nexport type Result<T> = Success<T> | Failure\n\n\n/* Model types ****************************************************************/\n\ninterface Session {\n    userId: number;\n    token: string;\n}\n\n\nexport interface Folder {\n    id: number;\n    name: string;\n    parentFolderId?: number;\n}\n\n\nexport interface Feed {\n    id: number,\n    url: string,\n    title: string,\n    link: string,\n    description: string,\n    folderId?: number\n}\n\n\nexport interface Item {\n    id: number;\n    feedId: number;\n    guid: string;\n    title: string;\n    description: string;\n    link: string;\n    date: Date;\n}\n\n\nexport enum SubscriptionTreeNodeType {\n    Folder = \"folder\",\n    Feed   = \"feed\"\n}\n\n\nexport type SubscriptionTreeFolder = Folder & { type: SubscriptionTreeNodeType.Folder,\n                                                children: SubscriptionTree }\nexport type SubscriptionTreeFeed   = Feed   & { type: SubscriptionTreeNodeType.Feed }\nexport type SubscriptionTreeNode   = SubscriptionTreeFolder | SubscriptionTreeFeed\nexport type SubscriptionTree       = SubscriptionTreeNode[]\n\n\n/* API helpers ***************************************************************/\n\nconst HTTP_CODE_TO_ERROR_TYPE: Record<number, ErrorType> = {\n    500: ErrorType.DatabaseError,\n    401: ErrorType.AuthenticationError,\n    404: ErrorType.NotFound,\n    409: ErrorType.Duplicate,\n}\n\n\nasync function parseResponse<T>(response: AxiosResponse<T>): Promise<Result<T>> {\n    if (response.status !== 200)\n        return Failure(HTTP_CODE_TO_ERROR_TYPE[response.status]);\n    return Success<T>(response.data);\n}\n\n\nconst axios = Axios.create({\n    baseURL: BACKEND_URL,\n    validateStatus: s => true,\n});\n\n\naxios.interceptors.request.use(\n    config => {\n        const state = store.getState();\n        const token = state.session.token;\n\n        if (token) {\n            config.headers['X-Token'] = token;\n        }\n\n        return config;\n    },\n    err => {\n        return Promise.reject(err);\n    }\n);\n\n\n/* Session API calls *********************************************************/\n\nexport const login = (username: string, password: string) =>\n    axios.post<Session>(SESSION_PATH, {username, password})\n        .then(parseResponse);\n\n\n/* Subscriptions API calls ***************************************************/\n\nexport const getSubscriptions = () =>\n    axios.get<SubscriptionTree>(SUBSCRIPTIONS_PATH)\n        .then(parseResponse);\n\n\n/* Folder API calls **********************************************************/\n\nexport const addFolder = (name: string, parent?: number) =>\n    axios.post<Folder>(FOLDER_PATH, {\n        name,\n        parent: parent || null,\n    })\n        .then(parseResponse);\n\n\nexport const updateFolder = (folderId: number, name: string, parent?: number) =>\n    axios.put<Folder>(`${FOLDER_PATH}/${folderId}`, {\n        name: name,\n        parent: parent || null,\n    })\n        .then(parseResponse)\n\n\nexport const removeFolder = (folderId: number) =>\n    axios.delete(`${FOLDER_PATH}/${folderId}`)\n        .then(parseResponse);\n\n\n/* Feed API calls ************************************************************/\n\nexport const addFeed = (url: string, title?: string, folderId?: number) =>\n    axios.post<Feed>(FEED_PATH, {\n        url,\n        title: title || null,\n        folder: folderId || null,\n    })\n        .then(parseResponse)\n\n\nexport const updateFeed = (feedId: number, title: string, folderId?: number) =>\n    axios.put(`${FEED_PATH}/${feedId}`, {\n        title,\n        folder: folderId || null,\n    })\n\n\nexport const requestFeedUpdate = (feedId: number) =>\n    axios.post(`${FEED_PATH}/${feedId}/update`)\n        .then(parseResponse)\n\n\nexport const removeFeed = (feedId: number) =>\n    axios.delete(`${FEED_PATH}/${feedId}`)\n        .then(parseResponse);\n\n\nexport const getFeedItems = (feedId: number) =>\n    axios.get<Item[]>(`${FEED_PATH}/${feedId}/items`)\n        .then(parseResponse);\n","/home/tancredi/Projects/rss-reader/frontend/src/components/reader/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/login/index.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/reader/Reader.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/login/Login.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/login/LoginForm.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/feed-browser/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-browser/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/feed-item-viewer/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/modal/index.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/DialogText.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/feed-browser/FeedBrowser.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/DialogButton.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/DialogButtons.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/dialog/Dialog.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-browser/SubscriptionsBrowser.tsx",["189"],"import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { SubscriptionTreeNodeType } from '../../api';\nimport { fetchFeed } from '../../store/feed-slice';\nimport {\n    selectSubscriptions, fetchSubscriptions,\n    selectSelectedNode, setSelectedNode\n} from '../../store/subscriptions-slice';\n\nimport Toolbar from '../toolbar';\nimport Tree from '../tree';\n\nimport './SubscriptionsBrowser.css';\n\n\nconst SubscriptionsBrowser: React.FC = () => {\n    const dispatch = useDispatch();\n    const subscriptions = useSelector(selectSubscriptions);\n    const selectedNode = useSelector(selectSelectedNode);\n\n    useEffect(() => {\n        dispatch(fetchSubscriptions());\n    }, []);\n\n    return (\n        <div className=\"SubscriptionsBrowser\">\n            <div className=\"SubscriptionsBrowser__Tree\">\n            <Tree\n                tree={ subscriptions }\n                selectedNode={ selectedNode }\n                onClick={ (e, f) => {\n                    dispatch(setSelectedNode(f));\n                    if (f.type === SubscriptionTreeNodeType.Feed)\n                        dispatch(fetchFeed(f));\n                } }\n            />\n            </div>\n            <div className=\"SubscriptionsBrowser__Toolbar\">\n                <Toolbar/>\n            </div>\n        </div>\n    );\n}\n\n\nexport default SubscriptionsBrowser;\n","/home/tancredi/Projects/rss-reader/frontend/src/components/feed-item-viewer/FeedItemViewer.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/FolderForm.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/SubscriptionsEditor.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/subscriptions-editor/FeedForm.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/form/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/modal/Modal.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/feed-browser/FeedItem.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/form/Form.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/form/FormInput.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/form/FormSubmit.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/toolbar/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/tree/index.ts",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/toolbar/Toolbar.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/tree/Tree.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/toolbar/Item.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/tree/FolderNode.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/tree/FeedNode.tsx",[],"/home/tancredi/Projects/rss-reader/frontend/src/components/icon/index.ts",["190"],"import Icon, {IconName} from './Icon';\n\nexport default Icon;\nexport * from './Icon'; // IconName\n\n","/home/tancredi/Projects/rss-reader/frontend/src/components/icon/Icon.tsx",[],["191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":14,"column":7,"nodeType":"199","messageId":"200","endLine":14,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":28,"column":17,"nodeType":"199","messageId":"203","endLine":28,"endColumn":24},{"ruleId":"201","severity":1,"message":"204","line":51,"column":17,"nodeType":"199","messageId":"203","endLine":51,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":24,"column":8,"nodeType":"207","endLine":24,"endColumn":10,"suggestions":"208"},{"ruleId":"197","severity":1,"message":"209","line":1,"column":15,"nodeType":"199","messageId":"200","endLine":1,"endColumn":23},{"ruleId":"193","replacedBy":"210"},{"ruleId":"195","replacedBy":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"@typescript-eslint/no-unused-vars","'removeToken' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'Success' is already defined.","redeclared","'Failure' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'IconName' is defined but never used.",["212"],["213"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},"Update the dependencies array to be: [dispatch]",{"range":"217","text":"218"},[713,715],"[dispatch]"]